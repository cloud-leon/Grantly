name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-group: [auth, profile, tokens, integration]
        python-version: [3.12]
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run auth tests
      if: matrix.test-group == 'auth'
      run: |
        pytest apps/users/tests/test_auth.py apps/users/tests/test_password_reset.py -v

    - name: Run profile tests
      if: matrix.test-group == 'profile'
      run: |
        pytest apps/users/tests/test_profile.py -v

    - name: Run token tests
      if: matrix.test-group == 'tokens'
      run: |
        pytest apps/users/tests/test_tokens.py apps/users/tests/test_token_expiration.py -v

    - name: Run integration tests
      if: matrix.test-group == 'integration'
      run: |
        pytest apps/users/tests/test_integration.py -v

    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: ${{ matrix.test-group }}
        name: ${{ matrix.test-group }}-coverage 